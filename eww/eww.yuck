
(defwidget metric [label value onchange]
 (box :orientation "h"
  :class "metric"
  :space-evenly false
  (box :class "label" label)
  (scale :min 0
   :max 101
   :active {onchange != ""}
   :value value
   :onchange onchange)
 )
 )

(defpoll volume :interval "1s"
 "scripts/get-vol")

(defpoll time :interval "10s"
 "date '+%H:%M %d %b %Y  '")

(defwidget placeholder []
  ""
)

(defwidget status [] 
 (box :class "status" :orientation "h" :space-evenly false :halign "end"
  (metric :label "VOL"
   :value volume
   :onchange "amixer -D pulse sset Master {}%")

  (metric :label "BAT"
   :value {EWW_BATTERY.BAT0.capacity}
   :onchange "")

  time
  )
 )


(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
 (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
  (box :space-evenly true
   (label :text "${workspaces}${current_workspace}" :visible false)
   (for workspace in workspaces
    (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
     (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
      (label :text "${workspace.id}")
     )
    )
   )
  )
 )
 )


(defwidget bar_wrapper []
 (centerbox :orientation "h"
  (workspaces)
  (placeholder)
  (status)
))


(defwindow bar
 :monitor 0
 :geometry (geometry :x "0"
   :y "0"
   :width "100%"
   :height "30px"
   :anchor "top center")
 :stacking "fg"
 :windowtype "dock"
 :wm-ignore false

 (bar_wrapper))

