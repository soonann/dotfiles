---
- name: installing dependencies and make symlinks
  hosts: localhost
  connection: local

  # set where you've cloned the dotfiles to
  vars_prompt:
    - name: dotfiles_path
      prompt: Enter the full path of the dotfiles
      default: $HOME/dotfiles
      private: no
  
  tasks:

  # install generic dev tools
  - name: install dev tools 
    become: true
    ansible.builtin.apt:
      pkg:
      - neovim
      - tmux
      - alacritty

      - fzf
      - ripgrep
      - fd-find
      - htop

      - curl
      - wget
      - zip
      - unzip

  # checks if tpm exists
  - name: check if tpm already exists
    stat:
      path: $HOME/.tmux/plugins/tpm
    register: tpm

  # install tpm when it does not exist
  - name: Create $HOME/.local/bin
    shell: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    when: not tpm.stat.exists

  - name: install python
    become: true
    ansible.builtin.apt:
      pkg:
      - python3-pip
      - python3-venv

  - name: install docker
    become: true
    ansible.builtin.apt:
      pkg:
      - docker

  - name: install rancher dependencies
    become: true
    ansible.builtin.apt:
      pkg: 
      - pass 
      - gnupg2

  - name: install c/c++
    become: true
    ansible.builtin.apt:
      pkg: 
      - gcc 
      - g++
      - cmake

  # check if the local bin dir exists
  - name: check if $HOME/.local/bin exists
    stat:
      path: $HOME/.local/bin
    register: local_bin

  # create the dir if it does not exist
  - name: create $HOME/.local/bin
    file:
      path: $HOME/.local/bin
      state: directory
    when: not local_bin.stat.exists

      # TODO: programatically add these lines into the .bashrc/.zshrc file
      ## User specific aliases and functions
      #if [ -d ~/.rc.d ]; then
      # for rc in ~/.rc.d/*; do
      #	 if [ -f "$rc" ]; then
      #		 . "$rc"
      #	 fi
      # done
      #fi
      #
      #unset rc

  # link bashrc
  - name: Create symlink for bashrc
    ansible.builtin.file:
      src: "{{ dotfiles_path }}/.rc.d"
      dest: $HOME/.rc.d
      state: link

  # link tmux dotfiles
  - name: Create symlink for tmux
    ansible.builtin.file:
      src: "{{ dotfiles_path }}/tmux/.tmux.conf"
      dest: $HOME/.tmux.conf
      state: link

  # link tmux-sessionizer
  - name: Create symlink for tmux-sessionizer
    ansible.builtin.file:
      src: "{{ dotfiles_path }}/tmux/tmux-sessionizer"
      dest: $HOME/.local/bin/tmux-sessionizer
      state: link

  # link nvim dotfiles
  - name: Create symlink for nvim
    ansible.builtin.file:
      src: "{{ dotfiles_path }}/nvim"
      dest: $HOME/.config/nvim
      state: link

  # link alacritty dotfiles
  - name: Create symlink for alacritty
    ansible.builtin.file:
      src: "{{ dotfiles_path }}/alacritty"
      dest: $HOME/.config/alacritty
      state: link


  # setup gnome window manager bindings
  - name: setup gsettings
    shell: "{{ dotfiles_path }}/gnome/gsettings-bindings.sh"

